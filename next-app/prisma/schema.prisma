// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  provider Provider
  streams  Stream[] // ← one-to-many: User → Stream
  upvotes  Upvote[]
}

enum Provider {
  GOOGLE
}

model Stream {
  id     String  @id @default(cuid())
  type   StreamType

  url    String
  extractedId String
  active Boolean @default(true)

  title String @default("")
  smallImg String @default("")
  bigImg String @default("")

  // new fields to relate back to User:
  user   User   @relation(fields: [userId], references: [id])
  userId String

  upvotes Upvote[]
}

enum StreamType {
  Spotify
  Youtube
}

model Upvote {
  id       String @id @default(cuid())
  userId   String
  streamId String

  user   User   @relation(fields: [userId], references: [id])
  stream Stream @relation(fields: [streamId], references: [id])

  @@unique([userId, streamId])
}
